/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package jasbro.gui.objects.div;

import jasbro.game.character.attributes.Attribute;
import jasbro.game.character.attributes.EssentialAttributes;
import jasbro.gui.DelegateMouseListener;
import jasbro.texts.TextUtil;
import jasbro.util.ConfigHandler;

import java.awt.Color;

import javax.swing.JProgressBar;

import com.jgoodies.forms.factories.FormFactory;
import com.jgoodies.forms.layout.ColumnSpec;
import com.jgoodies.forms.layout.FormLayout;
import com.jgoodies.forms.layout.RowSpec;

/**
 *
 * @author Azrael
 */
public class VerticalAttributeBar extends javax.swing.JPanel {
	private Attribute attribute;
	
	/**
	 * Creates new form AttributePanel
	 */
	public VerticalAttributeBar() {
		initComponents();
	}
	
	public VerticalAttributeBar(Attribute attribute) {
		this();
		setAttribute(attribute);
	}
	
	public Attribute getAttribute() {
		return attribute;
	}
	
	public void setAttribute(Attribute attribute) {
		this.attribute = attribute;
		if (attribute != null) {
			attributeBar.setMaximum(attribute.getMaxValue());
			attributeBar.setValue(attribute.getValue());
			setToolTipText(attribute.getNameResolved() + ": " + attribute.getValue() + " of " + attribute.getMaxValue());
			if (attribute.getAttributeName().equals(EssentialAttributes.HEALTH.toString())) {
				attributeBar.setStringPainted(true);
				attributeBar.setForeground(Color.RED);
			}
			else if (attribute.getAttributeName().equals(EssentialAttributes.MOTIVATION.toString())){
				attributeBar.setStringPainted(true);
				attributeBar.setForeground(new Color(0, 128, 128));
			}
			else {
				attributeBar.setStringPainted(true);
				attributeBar.setForeground(new Color(128, 0, 128));
			}
			if (ConfigHandler.isShowNumbersOnBars()) {
				attributeBar.setString(""+attribute.getValue());
			}
			else {
				attributeBar.setString("");
			}
			attributeIcon.setImage(attribute.getIcon());
			if (attribute.getAttributeType() instanceof EssentialAttributes) {
				attributeIcon.setToolTipText(TextUtil.htmlPreformatted(
						((EssentialAttributes) attribute.getAttributeType()).getDescription()));
			}
		}
	}
	
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		setOpaque(false);
		setLayout(new FormLayout(new ColumnSpec[] {
				ColumnSpec.decode("1dlu:grow"),},
				new RowSpec[] {
				FormFactory.NARROW_LINE_GAP_ROWSPEC,
				RowSpec.decode("1dlu:grow(11)"),
				FormFactory.NARROW_LINE_GAP_ROWSPEC,
				RowSpec.decode("1dlu:grow"),
				FormFactory.NARROW_LINE_GAP_ROWSPEC,}));
		
		attributeBar = new javax.swing.JProgressBar(JProgressBar.VERTICAL);
		add(attributeBar, "1, 2, center, fill");
		attributeIcon = new jasbro.gui.objects.div.MyImage();
		add(attributeIcon, "1, 4, fill, fill");
		
		DelegateMouseListener listener = new DelegateMouseListener();
		addMouseMotionListener(listener);
		addMouseListener(listener);
		
		setOpaque(false);
		attributeBar.setOpaque(false);
		
	}// </editor-fold>//GEN-END:initComponents
	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JProgressBar attributeBar;
	private jasbro.gui.objects.div.MyImage attributeIcon;
	// End of variables declaration//GEN-END:variables
}